"""Annual Customer Activity Growth Analysis"""
--active user by month and year
with au as (
	select 
		active_year,
		round(avg(customer), 2) as avg_monthly_active
	from
		(select 
			count(customer_id) as customer,
			extract(year from order_purchase_timestamp) as active_year,
			extract(month from order_purchase_timestamp) as active_month
		from orders
		group by 2, 3
		) as mau
group by 1
),
--new customer
nc as (
	select 
		years,
		count(cust) as new_customer
	from
		(select 
			distinct(customer_id),
			count(distinct(customer_id)) as cust,
			extract(year from order_purchase_timestamp) as years
		from orders
		group by 1, 3
		having count(distinct(customer_id)) = 1
		) as nc
	group by 1
),
--customers with repeat order per year
ro as (
	select 
		order_year,
		count(customer) as customer_repeat_order
	from
		(select 
			distinct(cust.customer_unique_id) as customer,
			count(cust.customer_id),
			extract(year from o.order_purchase_timestamp) as order_year
		from customers as cust
		left join orders as o on cust.customer_id = o.customer_id
		group by 1, 3
		having count(cust.customer_unique_id) > 1
		) as ro
	group by 1
),
--avg customer order per year
aco as (
	select
		order_year,
		round(avg(number_of_order), 2) as avg_order
	from
		(select 
			distinct(cust.customer_unique_id) as customer,
			count(cust.customer_id) as number_of_order,
			extract(year from o.order_purchase_timestamp) as order_year
		from customers as cust
		left join orders as o on cust.customer_id = o.customer_id
		group by 1, 3) as noo
	group by 1
)
select 
	au.active_year,
	au.avg_monthly_active,
	nc.new_customer,
	ro.customer_repeat_order,
	aco.avg_order
from au
join nc on au.active_year = nc.years
join ro on au.active_year = ro.order_year
join aco on au.active_year =aco.order_year

"""Annual product category quality analysis"""
--Total revenue per year
select 
	date_part('year', shipping_limit_date) as years,
	sum(price + freight_value) as revenue
from order_items as oi
WHERE oi.order_id in
	(select 
	 	order_id
	from orders as o
	where o.order_status = 'delivered')
group by 1;
--Total cancel order per year
select
	date_part('year', order_purchase_timestamp) as years,
	count(order_id) as total_cancel_order
from orders
where order_status = 'canceled'
group by 1;

-- product category with highest selling per year
create table product_rank as
select 
	years,
	product_category_name,
	revenue,
	rank() over (partition by years order by revenue desc) as prorank
from
	(select 
		date_part('year', shipping_limit_date) as years,
		product_id, 
		sum(price + freight_value) as revenue
	from order_items
	group by 1,2) as oi
join products as prr
on oi.product_id = prr.product_id;
select *
from product_rank
where prorank = 1;
--product with highest canceled order per year
create table product_cancel_rank as
select 
	years,
	product_category_name,
	cancel_product,
	rank() over(partition by years order by cancel_product desc) as rankc
from(
	select 
		years,
		product_category_name,
		count(product_category_name) as cancel_product
	from 
		(select
			date_part('year', order_purchase_timestamp) as years,
			product_id
		from orders as o
		join order_items as oi
		on o.order_id = oi.order_id
		where o.order_status = 'canceled'
		) as cp
	join products as prr
	on cp.product_id = prr.product_id
	group by 1, 2) as cpp;
select *
from product_cancel_rank
where rankc = 1;
--Master table
with r as (
	select 
		date_part('year', shipping_limit_date) as years,
		sum(price + freight_value) as revenue
	from order_items as oi
	WHERE oi.order_id in
		(select 
			order_id
		from orders as o
		where o.order_status = 'delivered')
	group by 1
),
co as (
	select
		date_part('year', order_purchase_timestamp) as years,
		count(order_id) as total_cancel_order
	from orders
	where order_status = 'canceled'
	group by 1
),
cho as (
select 
	years,
	product_category_name,
	revenue
from product_rank
where prorank = 1
),
cco as (
select 
	years,
	product_category_name,
	cancel_product
from product_cancel_rank
where rankc = 1
)
select 
	r.years,
	r.revenue,
	co.total_cancel_order,
	cho.product_category_name as category_selling,
	cho.revenue,
	cco.product_category_name as cancel_category,
	cco.cancel_product
from r
join co on r.years = co.years
join cho on r.years = cho.years
join cco on r.years = cco.years;

"""Analysis of annual payment type usage"""
--favorite used payment type per year
select
	date_part('year', o.order_purchase_timestamp) as years,
	pay.payment_type,
	count(pay.payment_installments) as used_payment
from orders as o
join payments as pay 
on o.order_id = pay.order_id
group by 1, 2
order by 3 desc

--used payment type information
SELECT
	years,
	payment_type,
	used_payment,
	case
		when used_payment < 1000 Then 'Low'
		when used_payment < 10000 then 'Mid'
		else 'High'
	END as payment_interested
from (
	select
		date_part('year', o.order_purchase_timestamp) as years,
		pay.payment_type,
		count(pay.payment_installments) as used_payment
	from orders as o
	join payments as pay 
	on o.order_id = pay.order_id
	group by 1, 2
) as subq



